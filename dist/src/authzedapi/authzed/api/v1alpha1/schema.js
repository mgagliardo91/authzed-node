"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaService = exports.WriteSchemaResponse = exports.WriteSchemaRequest = exports.ReadSchemaResponse = exports.ReadSchemaRequest = void 0;
// @generated by protobuf-ts 2.0.7 with parameter generate_dependencies,long_type_string,client_grpc1
// @generated from protobuf file "authzed/api/v1alpha1/schema.proto" (package "authzed.api.v1alpha1", syntax proto3)
// tslint:disable
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
// @generated message type with reflection information, may provide speed optimized methods
class ReadSchemaRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("authzed.api.v1alpha1.ReadSchemaRequest", [
            { no: 1, name: "object_definitions_names", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { repeated: { items: { string: { maxBytes: "128", pattern: "^([a-z][a-z0-9_]{1,62}[a-z0-9]/)?[a-z][a-z0-9_]{1,62}[a-z0-9]$" } } } } } }
        ]);
    }
    create(value) {
        const message = { objectDefinitionsNames: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            runtime_3.reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string object_definitions_names */ 1:
                    message.objectDefinitionsNames.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string object_definitions_names = 1; */
        for (let i = 0; i < message.objectDefinitionsNames.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.objectDefinitionsNames[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message authzed.api.v1alpha1.ReadSchemaRequest
 */
exports.ReadSchemaRequest = new ReadSchemaRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReadSchemaResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("authzed.api.v1alpha1.ReadSchemaResponse", [
            { no: 1, name: "object_definitions", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "computed_definitions_revision", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { objectDefinitions: [], computedDefinitionsRevision: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            runtime_3.reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string object_definitions */ 1:
                    message.objectDefinitions.push(reader.string());
                    break;
                case /* string computed_definitions_revision */ 2:
                    message.computedDefinitionsRevision = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string object_definitions = 1; */
        for (let i = 0; i < message.objectDefinitions.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.objectDefinitions[i]);
        /* string computed_definitions_revision = 2; */
        if (message.computedDefinitionsRevision !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.computedDefinitionsRevision);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message authzed.api.v1alpha1.ReadSchemaResponse
 */
exports.ReadSchemaResponse = new ReadSchemaResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WriteSchemaRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("authzed.api.v1alpha1.WriteSchemaRequest", [
            { no: 1, name: "schema", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "262144" } } } },
            { no: 2, name: "optional_definitions_revision_precondition", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { schema: "", optionalDefinitionsRevisionPrecondition: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            runtime_3.reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string schema */ 1:
                    message.schema = reader.string();
                    break;
                case /* string optional_definitions_revision_precondition */ 2:
                    message.optionalDefinitionsRevisionPrecondition = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string schema = 1; */
        if (message.schema !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.schema);
        /* string optional_definitions_revision_precondition = 2; */
        if (message.optionalDefinitionsRevisionPrecondition !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.optionalDefinitionsRevisionPrecondition);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message authzed.api.v1alpha1.WriteSchemaRequest
 */
exports.WriteSchemaRequest = new WriteSchemaRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WriteSchemaResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("authzed.api.v1alpha1.WriteSchemaResponse", [
            { no: 1, name: "object_definitions_names", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "computed_definitions_revision", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { objectDefinitionsNames: [], computedDefinitionsRevision: "" };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            runtime_3.reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string object_definitions_names */ 1:
                    message.objectDefinitionsNames.push(reader.string());
                    break;
                case /* string computed_definitions_revision */ 2:
                    message.computedDefinitionsRevision = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string object_definitions_names = 1; */
        for (let i = 0; i < message.objectDefinitionsNames.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.objectDefinitionsNames[i]);
        /* string computed_definitions_revision = 2; */
        if (message.computedDefinitionsRevision !== "")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.computedDefinitionsRevision);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message authzed.api.v1alpha1.WriteSchemaResponse
 */
exports.WriteSchemaResponse = new WriteSchemaResponse$Type();
/**
 * @generated ServiceType for protobuf service authzed.api.v1alpha1.SchemaService
 */
exports.SchemaService = new runtime_rpc_1.ServiceType("authzed.api.v1alpha1.SchemaService", [
    { name: "ReadSchema", options: {}, I: exports.ReadSchemaRequest, O: exports.ReadSchemaResponse },
    { name: "WriteSchema", options: {}, I: exports.WriteSchemaRequest, O: exports.WriteSchemaResponse }
]);
//# sourceMappingURL=schema.js.map